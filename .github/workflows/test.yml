name: Test Suite

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12, 3.13]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        
    - name: Install dependencies
      run: |
        uv sync --dev
        
    - name: Lint and format check with ruff
      run: |
        uv run ruff check src/
        uv run ruff format --check --diff src/
        
    - name: Type check with mypy
      run: |
        uv run mypy src/ --ignore-missing-imports
      continue-on-error: true  # Allow type check failures initially
      
    - name: Run unit tests
      run: |
        PYTHONPATH=$PWD uv run pytest src -v -m "not integration and not performance" --cov=src --cov-report=xml --cov-report=html --cov-fail-under=80 -p no:debugging
        
    - name: Run integration tests
      run: |
        PYTHONPATH=$PWD uv run pytest src -v -m integration --cov=src --cov-append --cov-report=xml -p no:debugging
        
    - name: Run performance tests
      run: |
        PYTHONPATH=$PWD uv run pytest src -v -m performance --timeout=60 -p no:debugging
      continue-on-error: true  # Allow performance test failures initially
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Archive coverage HTML report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: htmlcov/
        
    - name: Archive test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          .coverage
          coverage.xml

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
        
    - name: Install security scanner
      run: |
        pip install bandit safety
        
    - name: Run bandit security scan
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
        
    - name: Run safety dependency scan
      run: |
        safety check --json --output safety-report.json || true
        
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
